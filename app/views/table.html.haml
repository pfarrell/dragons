%h2 
  #{table.name}
  %small
    %a{href: "../query?q=#{table.select}"}
      Select
    %a{href: "../query?q=#{table.create}"}
      Create
.container
  .row
    .col-md-4
      %h4 
        Fields
      %table.table.table-condensed
        %thead
          %tr
            -table_struct[:header].each do |header|
              %th
                =header[0]
        %tbody
          -table_struct[:data].each do |defn|
            %tr
              -table_struct[:header].each do |name, prop|
                %td
                  .table-data
                    -if prop[:link].nil?
                      =prop[:value].call(defn)
                    -else
                      %a{href:"#{prop[:link].call(defn)}"}
                        =prop[:value].call(defn)
    .col-md-4
      %h4 
        Indexes
      -if table.indexes.nil? || table.indexes.length < 1
        %h5
          No Indexes
      -else
        %table.table.table-condensed
          %thead
            %tr
              -index_struct[:header].each do |header|
                %th
                  =header[0]
          %tbody
            -index_struct[:data].each do |defn|
              %tr
                -index_struct[:header].each do |name, prop|
                  %td
                    .table-data
                      =prop[:value].call(defn)
    .col-md-4
      %h4 
        Routines
      -if table.routines.nil? || table.routines.length < 1
        %h5
          No referencing routines
      -else
        =haml :'partials/lambda_list', locals: {model: routine_struct}
  .row 
    .col-md-4
      %h4
        Foreign Keys
      -if table.foreign_keys.nil? || table.foreign_keys.length < 1
        %h5
          No Foreign Keys
      -else
        =haml :'partials/lambda_list', locals: {model: foreign_key_struct}
  .row
    .col-md-12
      %h4 
        Sample Data
      -unless table.data.nil? || table.data.length < 1
        %table.table.table-condensed
          %thead
            %tr
              -table.data(5).first.each do |k,v|
                %th
                  =k
          %tbody
            -table.data(5).each do |row|
              %tr
                -row.each do |k,v|
                  %td
                    =v
         
