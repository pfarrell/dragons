-unless error.nil?
  .alert-error
    #{error}
.container
  .row
    .col-md-12
      %h2
        Query
      %textarea#query.query{rows:"10", name:"query", autofocus: true}
        -unless query.nil?
          =query.gsub(/^[ \t]*/, "\t")
      .submit
        %button.btn.btn-primary#submit{type:"submit", value:"Query", onClick:"javascript:run_query(get_query())"}
          Submit
  .row
    .col-md-12
      #results
:javascript
  function handle_results(data) {
    $('#results').empty();
    var headers=[], rows={}

     var rowHtml='<tr><th>'+data.columns.join('</th><th>')+'</th></tr>';
     $.each(data.data, function(idx,row) {
       rowHtml +='<tr>'
       $.each(data.columns, function(idx, col) {
         rowHtml += "<td>" + row[col] + "</td>";
       });
       rowHtml +='</tr>';
     });

     $('#results').append("<row><div class='col-md-4'><span class='h3'>Results (" + data.data.length + " rows)</span></div><div class='col-md-8'><span class='pull-right'>" + data.query + "</span></div></row>");
     $('#results').append("<row><table class='table table-condensed'>" + rowHtml + "</table></row>");
  }

  function handle_failure(status, data) {
    $('#results').empty();
    $('#results').append("<div><button class='btn btn-sm btn-danger'><span class='glyphicon glyphicon-warning-sign'></span></button><span class='lead'>" + data + "</span></div>");
  }

  function run_query(query) {
    var field = $('textarea#query')[0]
    var start = field.selectionStart;
    var end = field.selectionEnd;
    $.ajax({
      method: "POST",
      url: "/query",
      data: {query: query}
    })
    .done(function(msg) {
      handle_results(msg);
      select(field, start, end);
    })
    .fail(function(xhr, status, msg) {
      handle_failure(status, xhr.responseJSON.error_message);
      select(field, start, end);
    });
  }

  function get_query() {
    var query = getSelection($('textarea#query')[0]);
    if(query == "") {
      query = $('textarea#query').val();
    }
    return query;
  }

  function select(field, start, end) {
    if( field.createTextRange ) {
      var selRange = field.createTextRange();
      selRange.collapse(true);
      selRange.moveStart('character', start);
      selRange.moveEnd('character', end);
      selRange.select();
      field.focus();
    } else if( field.setSelectionRange ) {
      field.focus();
      field.setSelectionRange(start, end);
    } else if( typeof field.selectionStart != 'undefined' ) {
      field.selectionStart = start;
      field.selectionEnd = end;
      field.focus();
    }
  }

  function getSelection(field) {
    return field.value.substring(field.selectionStart, field.selectionEnd);
  }
        
  $(document).keydown(function(e) {
    if((e.which == 82 && e.ctrlKey) || (e.which == 69 && e.metaKey)){
      run_query(get_query());
    }
    console.log(e.which);
  });
